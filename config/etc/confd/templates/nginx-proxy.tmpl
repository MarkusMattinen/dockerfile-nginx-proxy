# /etc/nginx/nginx.conf

daemon off;
worker_processes 4;
user www-data;
error_log /dev/stdout info;

events {
    worker_connections 512;
    use epoll;
    multi_accept on;
}

http {
    map $http_upgrade $connection_upgrade { default upgrade; '' close; }
    map $http_x_forwarded_by $header_x_forwarded_by { default $http_x_forwarded_by; '' $server_addr_port; }
    map $http_x_forwarded_port $header_x_forwarded_port { default $http_x_forwarded_port; '' $server_port; }
    map $http_x_forwarded_proto $header_x_forwarded_proto { default $http_x_forwarded_proto; '' $scheme; }
    map $http_x_forwarded_protocol $header_x_forwarded_protocol { default $http_x_forwarded_protocol; '' $scheme; }
    map $http_x_forwarder_server $header_x_forwarder_server { default $http_x_forwarder_server; '' $host; }
    map $http_x_real_ip $header_x_real_ip { default $http_x_real_ip; '' $remote_addr; }
    map $http_x_scheme $header_x_scheme { default $http_x_scheme; '' $scheme; }

    types_hash_bucket_size 64;
    server_names_hash_bucket_size 256;
    variables_hash_bucket_size 128;
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;

    client_max_body_size 10G;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;
    client_body_timeout 600;
    client_header_timeout 600;
    keepalive_timeout 600;
    resolver 8.8.8.8 8.8.4.4;
    server_tokens off;
    gzip on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_comp_level 2;
    gzip_min_length 512;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Permitted-Cross-Domain-Policies "master-only" always;
    more_clear_headers 'X-Powered-By';
    more_clear_headers 'Server';

    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # set these headers only if they were not set by a downstream proxy
    proxy_set_header X-Forwarded-By $header_x_forwarded_by;
    proxy_set_header X-Forwarded-Port $header_x_forwarded_port;
    proxy_set_header X-Forwarded-Proto $header_x_forwarded_proto;
    proxy_set_header X-Forwarded-Protocol $header_x_forwarded_protocol;
    proxy_set_header X-Forwarder-Server $header_x_forwarder_server;
    proxy_set_header X-Real-IP $header_x_real_ip;
    proxy_set_header X-Scheme $header_x_scheme;

    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_max_temp_file_size 0;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    ssl_dhparam /etc/nginx/dhparam4096.pem;

    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    
    add_header "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload" always;

    ssl_stapling on;
    ssl_stapling_verify on;

    server {
        set $server_addr_port '${server_addr}:${server_port}';
        listen [::]:80 default ipv6only=off;
        return 301 https://$host$request_uri;
    }

    server {
        set $server_addr_port '${server_addr}:${server_port}';
        listen [::]:443 ssl ipv6only=off default;
        server_name _;

        ssl_certificate /usr/local/etc/ssl/private/tls.crt;
        ssl_certificate_key /usr/local/etc/ssl/private/tls.key;
        ssl_trusted_certificate /usr/local/etc/ssl/private/ca.crt;

        {{ if getenv "FALLBACK_PROXY" }}
        location / {
            proxy_pass {{ getenv "FALLBACK_PROXY" }};
        }
        {{ else }}
        return 404;
        {{ end }}
    }

{{range $domain := ls "/nginx_www_redirect_domains"}}
    server {
        set $server_addr_port '${server_addr}:${server_port}';
        listen [::]:443;

        ssl_certificate /usr/local/etc/ssl/private/www.{{$domain}}/tls.crt;
        ssl_certificate_key /usr/local/etc/ssl/private/www.{{$domain}}/tls.key;
        ssl_trusted_certificate /usr/local/etc/ssl/private/www.{{$domain}}/ca.crt;

        server_name www.{{$domain}} ipv4.{{$domain}} ipv6.{{$domain}};
        return 301 https://{{$domain}}$request_uri;
    }
{{end}}

{{range $app := lsdir "/nginx_proxy"}}
    upstream {{$app}} {
  {{$appdir := printf "/nginx_proxy/%s/*" $app}}{{range gets $appdir}}
        server {{.Value}};
  {{end}}
    }

    server {
        set $server_addr_port '${server_addr}:${server_port}';
        listen [::]:443;

        ssl_certificate /usr/local/etc/ssl/private/{{$app}}/tls.crt;
        ssl_certificate_key /usr/local/etc/ssl/private/{{$app}}/tls.key;
        ssl_trusted_certificate /usr/local/etc/ssl/private/{{$app}}/ca.crt;

        server_name {{$app}} ipv4-{{$app}} ipv6-{{$app}};

        location / {
            proxy_pass http://{{$app}};
        }
    }
{{end}}
}
